<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if ??? doesn?t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <!-- Read this before publishing packages to chocolatey.org: https://github.com/chocolatey/chocolatey/wiki/CreatePackages -->
    <id>terraform</id>
    <title>Terraform</title>
    <version>0.6.2</version>
    <authors>Mitchell Hashimoto, HashiCorp</authors>
    <owners>James Toyer</owners>
    <summary>Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.</summary>
    <description>
Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.

The key features of Terraform are:

*	**Infrastructure as Code**: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.
*	**Execution Plans**: Terraform has a "planning" step where it generates an *execution plan*. The execution plan shows what Terraform will do when you call apply. This lets you avoid any surprises when Terraform manipulates infrastructure.
*	**Resource Graph**: Terraform builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.
*	**Change Automation**: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order, avoiding many possible human errors.

For more information, see the [introduction section](http://www.terraform.io/intro) of the Terraform website.
    </description>
    <releaseNotes>
## 0.6.2 (August 6, 2015)

FEATURES:

  * **New resource: `google_compute_instance_group_manager`** [GH-2868]
  * **New resource: `google_compute_autoscaler`** [GH-2868]
  * **New resource: `aws_s3_bucket_object`** [GH-2898]

IMPROVEMENTS:

  * core: Add resource IDs to errors coming from `apply`/`refresh` [GH-2815]
  * provider/aws: Validate credentials before walking the graph [GH-2730]
  * provider/aws: Added website_domain for S3 buckets [GH-2210]
  * provider/aws: ELB names are now optional, and generated by Terraform if omitted [GH-2571]
  * provider/aws: Downcase RDS engine names to prevent continuous diffs [GH-2745]
  * provider/aws: Added `source_dest_check` attribute to the aws_network_interface [GH-2741]
  * provider/aws: Clean up externally removed Launch Configurations [GH-2806]
  * provider/aws: Allow configuration of the DynamoDB Endpoint [GH-2825]
  * provider/aws: Compute private ip addresses of ENIs if they are not specified [GH-2743]
  * provider/aws: Add `arn` attribute for DynamoDB tables [GH-2924]
  * provider/azure: Allow `settings_file` to accept XML string [GH-2922]
  * provider/azure: Provide a simpler error when using a Platform Image without a 
      Storage Service [GH-2861]
  * provider/google: `account_file` is now expected to be JSON. Paths are still supported for
      backwards compatibility. [GH-2839]

BUG FIXES:

  * core: Prevent error duplication in `apply` [GH-2815]
  * core: Fix crash when  a provider validation adds a warning [GH-2878]
  * provider/aws: Fix issue with toggling monitoring in AWS Instances [GH-2794]
  * provider/aws: Fix issue with Spot Instance Requests and cancellation [GH-2805]
  * provider/aws: Fix issue with checking for ElastiCache cluster cache node status [GH-2842]
  * provider/aws: Fix issue when unable to find a Root Block Device name of an Instance Backed
      AMI [GH-2646]
  * provider/dnsimple: Domain and type should force new records [GH-2777]
  * provider/aws: Fix issue with IAM Server Certificates and Chains [GH-2871]
  * provider/aws: Fix issue with IAM Server Certificates when using `path` [GH-2871]
  * provider/aws: Fix issue in Security Group Rules when the Security Group is not found [GH-2897]
  * provider/aws: allow external ENI attachments [GH-2943]
  * provider/aws: Fix issue with S3 Buckets, and throwing an error when not found [GH-2925]

## Previous Releases
For more information on previous releases, check out the changelog on [GitHub](https://github.com/hashicorp/terraform/blob/v0.6.2/CHANGELOG.md).
    </releaseNotes>
    <projectUrl>http://www.terraform.io</projectUrl>
    <tags>terraform</tags>
    <copyright>HashiCorp 2015</copyright>
    <licenseUrl>https://github.com/hashicorp/terraform/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <!-- Important note about https://cdn.rawgit.com: Files are cached permanently after the first request. Use commit URLs when updating the icon. -->
    <iconUrl>https://cdn.rawgit.com/jamestoyer/chocolatey-packages/c98f82fc306d8e204546d890aad96b49f23b7539/terraform/icons/terraform.png</iconUrl>
    <!--<dependencies>
      <dependency id="" version="" />
    </dependencies>-->
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
