<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if ??? doesn?t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <!-- Read this before publishing packages to chocolatey.org: https://github.com/chocolatey/chocolatey/wiki/CreatePackages -->
    <id>terraform</id>
    <title>Terraform</title>
    <version>0.6.13</version>
    <authors>Mitchell Hashimoto, HashiCorp</authors>
    <owners>James Toyer</owners>
    <summary>Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.</summary>
    <description>
Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.

The key features of Terraform are:

* **Infrastructure as Code**: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.
* **Execution Plans**: Terraform has a "planning" step where it generates an *execution plan*. The execution plan shows what Terraform will do when you call apply. This lets you avoid any surprises when Terraform manipulates infrastructure.
* **Resource Graph**: Terraform builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.
* **Change Automation**: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order, avoiding many possible human errors.

For more information, see the [introduction section](http://www.terraform.io/intro) of the Terraform website.
    </description>
    <releaseNotes>
## 0.6.13 (March 16, 2016)

BACKWARDS INCOMPATIBILITIES / NOTES:

  * provider/aws: `aws_s3_bucket_object` field `etag` is now trimming off quotes (returns raw MD5 hash) [GH-5305]
  * provider/consul: `consul_keys` `key` blocks now respect `delete` flag for removing individual blocks. Previously keys would be deleted only when the entire resource was removed.
  * provider/google: `next_hop_network` on `google_compute_route` is now read-only, to mirror the behavior in the official docs [GH-5564]
  * state/remote/http: PUT requests for this backend will now have `Content-Type: application/json` instead of `application/octet-stream` [GH-5499]

FEATURES:

  * **New command:** `terraform untaint` [GH-5527]
  * **New resource:** `aws_api_gateway_api_key` [GH-4295]
  * **New resource:** `aws_api_gateway_deployment` [GH-4295]
  * **New resource:** `aws_api_gateway_integration_response` [GH-4295]
  * **New resource:** `aws_api_gateway_integration` [GH-4295]
  * **New resource:** `aws_api_gateway_method_response` [GH-4295]
  * **New resource:** `aws_api_gateway_method` [GH-4295]
  * **New resource:** `aws_api_gateway_model` [GH-4295]
  * **New resource:** `aws_api_gateway_resource` [GH-4295]
  * **New resource:** `aws_api_gateway_rest_api` [GH-4295]
  * **New resource:** `aws_elastic_beanstalk_application` [GH-3157]
  * **New resource:** `aws_elastic_beanstalk_configuration_template` [GH-3157]
  * **New resource:** `aws_elastic_beanstalk_environment` [GH-3157]
  * **New resource:** `aws_iam_account_password_policy` [GH-5029]
  * **New resource:** `aws_kms_alias` [GH-3928]
  * **New resource:** `aws_kms_key` [GH-3928]
  * **New resource:** `google_compute_instance_group` [GH-4087]

IMPROVEMENTS:

  * provider/aws: Add `repository_link` as a computed field for `aws_ecr_repository` [GH-5524]
  * provider/aws: Add ability to update Route53 zone comments [GH-5318]
  * provider/aws: Add support for Metrics Collection to `aws_autoscaling_group` [GH-4688]
  * provider/aws: Add support for `description` to `aws_network_interface` [GH-5523]
  * provider/aws: Add support for `storage_encrypted` to `aws_rds_cluster` [GH-5520]
  * provider/aws: Add support for routing rules on `aws_s3_bucket` resources [GH-5327]
  * provider/aws: Enable updates &amp; versioning for `aws_s3_bucket_object` [GH-5305]
  * provider/aws: Guard against Nil Reference in Redshift Endpoints [GH-5593]
  * provider/aws: Lambda S3 object version defaults to `$LATEST` if unspecified [GH-5370]
  * provider/aws: Retry DB Creation on IAM propigation error [GH-5515]
  * provider/aws: Support KMS encryption of S3 objects [GH-5453]
  * provider/aws: `aws_autoscaling_lifecycle_hook` now have `notification_target_arn` and `role_arn` as optional [GH-5616]
  * provider/aws: `aws_ecs_service` validates number of `load_balancer`s before creation/updates [GH-5605]
  * provider/aws: `aws_instance` now allows changes to security groups without force new resource [GH-5193]
  * provider/aws: send Terraform version in User-Agent [GH-5621]
  * provider/cloudflare: Change `cloudflare_record` type to ForceNew [GH-5353]
  * provider/consul: `consul_keys` now detects drift and supports deletion of individual `key` blocks [GH-5210]
  * provider/digitalocean: Guard against Nil reference in `digitalocean_droplet` [GH-5588]
  * provider/docker: Add support for `unless-stopped` to docker container `restart_policy` [GH-5337]
  * provider/google: Mark `next_hop_network` as read-only on `google_compute_route` [GH-5564]
  * provider/google: Validate VPN tunnel peer_ip at plan time [GH-5501]
  * provider/openstack: Add Support for Domain ID and Domain Name environment variables [GH-5355]
  * provider/openstack: Add support for instances to have multiple ephemeral disks. [GH-5131]
  * provider/openstack: Re-Add server.AccessIPv4 and server.AccessIPv6 [GH-5366]
  * provider/vsphere: Add support for disk init types [GH-4284]
  * provisioner/remote-exec: Clear out scripts after uploading [GH-5577]
  * state/remote/http: Change content type of PUT requests to the more appropriate `application/json` [GH-5499]

BUG FIXES:

  * core: Disallow negative indices in the element() interpolation function, preventing crash [GH-5263]
  * core: Fix issue that caused tainted resource destroys to be improperly filtered out when using -target and a plan file [GH-5516]
  * core: Fix several issues with retry logic causing spurious "timeout while waiting for state to become ..." errors and unnecessary retry loops [GH-5460], [GH-5538], [GH-5543], [GH-5553]
  * core: Includes upstream HCL fix to properly detect unbalanced braces and throw an error [GH-5400]
  * provider/aws: Allow recovering from failed CloudWatch Event Target creation [GH-5395]
  * provider/aws: Fix EC2 Classic SG Rule issue when referencing rules by name [GH-5533]
  * provider/aws: Fix `aws_cloudformation_stack` update for `parameters` &amp; `capabilities` if unmodified [GH-5603]
  * provider/aws: Fix a bug where AWS Kinesis Stream includes closed shards in the shard_count [GH-5401]
  * provider/aws: Fix a bug where ElasticSearch Domain tags were not being set correctly [GH-5361]
  * provider/aws: Fix a bug where `aws_route` would show continual changes in the plan when not computed [GH-5321]
  * provider/aws: Fix a bug where `publicly_assessible` wasn't being set to state in `aws_db_instance` [GH-5535]
  * provider/aws: Fix a bug where listener protocol on `aws_elb` resources was case insensitive [GH-5376]
  * provider/aws: Fix a bug which caused panics creating rules on security groups in EC2 Classic [GH-5329]
  * provider/aws: Fix crash when `aws_lambda_function` VpcId is nil [GH-5182]
  * provider/aws: Fix error with parsing JSON in `aws_s3_bucket` policy attribute [GH-5474]
  * provider/aws: `aws_lambda_function` can be properly updated, either via `s3_object_version` or via `filename` &amp; `source_code_hash` as described in docs [GH-5239]
  * provider/google: Fix managed instance group preemptible instance creation [GH-4834]
  * provider/openstack: Account for a 403 reply when os-tenant-networks is disabled [GH-5432]
  * provider/openstack: Fix crashing during certain network updates in instances [GH-5365]
  * provider/openstack: Fix create/delete statuses in load balancing resources [GH-5557]
  * provider/openstack: Fix race condition between instance deletion and volume detachment [GH-5359]
  * provider/template: Warn when `template` attribute specified as path [GH-5563]

INTERNAL IMPROVEMENTS:

  * helper/schema: `MaxItems` attribute on schema lists and sets [GH-5218]

## Previous Releases
For more information on previous releases, check out the changelog on [GitHub](https://github.com/hashicorp/terraform/blob/v0.6.13/CHANGELOG.md).
    </releaseNotes>
    <projectUrl>http://www.terraform.io</projectUrl>
    <tags>terraform</tags>
    <copyright>HashiCorp 2015-2016</copyright>
    <licenseUrl>https://github.com/hashicorp/terraform/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <!-- Important note about https://cdn.rawgit.com: Files are cached permanently after the first request. Use commit URLs when updating the icon. -->
    <iconUrl>https://cdn.rawgit.com/jamestoyer/chocolatey-packages/c98f82fc306d8e204546d890aad96b49f23b7539/terraform/icons/terraform.png</iconUrl>
    <!--<dependencies>
      <dependency id="" version="" />
    </dependencies>-->
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
