<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if ??? doesn?t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <!-- Read this before publishing packages to chocolatey.org: https://github.com/chocolatey/chocolatey/wiki/CreatePackages -->
    <id>terraform</id>
    <title>Terraform</title>
    <version>0.6.10</version>
    <authors>Mitchell Hashimoto, HashiCorp</authors>
    <owners>James Toyer</owners>
    <summary>Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.</summary>
    <description>
Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.

The key features of Terraform are:

* **Infrastructure as Code**: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.
* **Execution Plans**: Terraform has a "planning" step where it generates an *execution plan*. The execution plan shows what Terraform will do when you call apply. This lets you avoid any surprises when Terraform manipulates infrastructure.
* **Resource Graph**: Terraform builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.
* **Change Automation**: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order, avoiding many possible human errors.

For more information, see the [introduction section](http://www.terraform.io/intro) of the Terraform website.
    </description>
    <releaseNotes>
## 0.6.10 (January 27, 2016)

BACKWARDS INCOMPATIBILITIES / NOTES:

 * The `-module-depth` flag available on `plan`, `apply`, `show`, and `graph` now defaults to `-1`, causing
   resources within modules to be expanded in command output. This is only a cosmetic change; it does not affect
   any behavior.
 * This release includes a bugfix for `$${}` interpolation escaping. These strings are now properly converted to `${}`
   during interpolation. This may cause diffs on existing configurations in certain cases.
 * Users of `consul_keys` should note that the `value` sub-attribute of `key` will no longer be updated with the remote value of the key. It should be only used to _set_ a key in Consul K/V. To reference key values, use the `var` attribute.
 * The 0.6.9 release contained a regression in `aws_autoscaling_group` capacity waiting behavior for configs where `min_elb_capacity != desired_capacity` or `min_size != desired_capacity`. This release remedies that regression by un-deprecating `min_elb_capacity` and restoring the prior behavior.

FEATURES:

  * **New resource: `aws_lambda_alias`** [GH-4664]
  * **New resource: `aws_redshift_cluster`** [GH-3862]
  * **New resource: `aws_redshift_parameter_group`** [GH-3862]
  * **New resource: `aws_redshift_security_group`** [GH-3862]
  * **New resource: `aws_redshift_subnet_group`** [GH-3862]
  * **New resource: `azurerm_cdn_endpoint`** [GH-4759]
  * **New resource: `azurerm_cdn_profile`** [GH-4740]
  * **New resource: `azurerm_network_interface`** [GH-4598]
  * **New resource: `azurerm_network_security_rule`** [GH-4586]
  * **New resource: `azurerm_route_table`** [GH-4602]
  * **New resource: `azurerm_route`** [GH-4604]
  * **New resource: `azurerm_storage_account`** [GH-4698]
  * **New resource: `azurerm_storage_blob`** [GH-4862]
  * **New resource: `azurerm_storage_container`** [GH-4862]
  * **New resource: `azurerm_storage_queue`** [GH-4862]
  * **New resource: `azurerm_subnet`** [GH-4595]
  * **New resource: `docker_network`** [GH-4483]
  * **New resource: `docker_volume`** [GH-4483]
  * **New resource: `google_sql_user`** [GH-4669]

IMPROVEMENTS:

  * core: Add `sha256()` interpolation function [GH-4704]
  * core: Validate lifecycle keys to show helpful error messages whe they are mistypes [GH-4745]
  * core: Default `module-depth` parameter to `-1`, which expands resources within modules in command output [GH-4763]
  * core: Variable types may now be specified explicitly using the `type` argument [GH-4795]
  * provider/aws: Add new parameters `az_mode` and `availability_zone(s)` in ElastiCache [GH-4631]
  * provider/aws: Allow ap-northeast-2 (Seoul) as valid region [GH-4637]
  * provider/aws: Limit SNS Topic Subscription protocols [GH-4639]
  * provider/aws: Add support for configuring logging on `aws_s3_bucket` resources [GH-4482]
  * provider/aws: Add AWS Classiclink for AWS VPC resource [GH-3994]
  * provider/aws: Supporting New AWS Route53 HealthCheck additions [GH-4564]
  * provider/aws: Store instance state [GH-3261]
  * provider/aws: Add support for updating ELB availability zones and subnets [GH-4597]
  * provider/aws: Enable specifying aws s3 redirect protocol [GH-4098]
  * provider/aws: Added support for `encrypted` on `ebs_block_devices` in Launch Configurations [GH-4481]
  * provider/aws: Retry Listener Creation for ELBs [GH-4825]
  * provider/aws: Add support for creating Managed Microsoft Active Directory
    and Directory Connectors [GH-4388]
  * provider/aws: Mark some `aws_db_instance` fields as optional [GH-3138]
  * provider/digitalocean: Add support for reassigning `digitalocean_floating_ip` resources [GH-4476]
  * provider/dme: Add support for Global Traffic Director locations on `dme_record` resources [GH-4305]
  * provider/docker: Add support for adding host entries on `docker_container` resources [GH-3463]
  * provider/docker: Add support for mounting named volumes on `docker_container` resources [GH-4480]
  * provider/google: Add content field to bucket object [GH-3893]
  * provider/google: Add support for  `named_port` blocks on `google_compute_instance_group_manager` resources [GH-4605]
  * provider/openstack: Add "personality" support to instance resource [GH-4623]
  * provider/packet: Handle external state changes for Packet resources gracefully [GH-4676]
  * provider/tls: `tls_private_key` now exports attributes with public key in both PEM and OpenSSH format [GH-4606]
  * provider/vdc: Add `allow_unverified_ssl` for connections to vCloud API [GH-4811]
  * state/remote: Allow KMS Key Encryption to be used with S3 backend [GH-2903]

BUG FIXES:

  * core: Fix handling of literals with escaped interpolations `$${var}` [GH-4747]
  * core: Fix diff mismatch when RequiresNew field and list both change [GH-4749]
  * core: Respect module target path argument on `terraform init` [GH-4753]
  * core: Write planfile even on empty plans [GH-4766]
  * core: Add validation error when output is missing value field [GH-4762]
  * core: Fix improper handling of orphan resources when targeting [GH-4574]
  * core: Properly handle references to computed set attributes [GH-4840]
  * config: Detect a specific JSON edge case and show a helpful workaround [GH-4746]
  * provider/openstack: Ensure valid Security Group Rule attribute combination [GH-4466]
  * provider/openstack: Don't put fixed_ip in port creation request if not defined [GH-4617]
  * provider/google: Clarify SQL Database Instance recent name restriction [GH-4577]
  * provider/google: Split Instance network interface into two fields [GH-4265]
  * provider/aws: Error with empty list item on security group [GH-4140]
  * provider/aws: Fix issue with detecting drift in AWS Security Groups rules [GH-4779]
  * provider/aws: Trap Instance error from mismatched SG IDs and Names [GH-4240]
  * provider/aws: EBS optimised to force new resource in AWS Instance [GH-4627]
  * provider/aws: Wait for NACL rule to be visible [GH-4734]
  * provider/aws: `default_result` on `aws_autoscaling_lifecycle_hook` resources is now computed [GH-4695]
  * provider/aws: fix ASG capacity waiting regression by un-deprecating `min_elb_capacity` [GH-4864]
  * provider/consul: fix several bugs surrounding update behavior [GH-4787]
  * provider/mailgun: Handle the fact that the domain destroy API is eventually consistent [GH-4777]
  * provider/template: Fix race causing sporadic crashes in template_file with count > 1 [GH-4694]
  * provider/template: Add support for updating `template_cloudinit_config` resources [GH-4757]
  * provisioner/chef: Add ENV['no_proxy'] to chef provisioner if no_proxy is detected [GH-4661]

## Previous Releases
For more information on previous releases, check out the changelog on [GitHub](https://github.com/hashicorp/terraform/blob/v0.6.10/CHANGELOG.md).
    </releaseNotes>
    <projectUrl>http://www.terraform.io</projectUrl>
    <tags>terraform</tags>
    <copyright>HashiCorp 2015</copyright>
    <licenseUrl>https://github.com/hashicorp/terraform/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <!-- Important note about https://cdn.rawgit.com: Files are cached permanently after the first request. Use commit URLs when updating the icon. -->
    <iconUrl>https://cdn.rawgit.com/jamestoyer/chocolatey-packages/c98f82fc306d8e204546d890aad96b49f23b7539/terraform/icons/terraform.png</iconUrl>
    <!--<dependencies>
      <dependency id="" version="" />
    </dependencies>-->
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
