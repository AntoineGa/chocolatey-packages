<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if ??? doesn?t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <!-- Read this before publishing packages to chocolatey.org: https://github.com/chocolatey/chocolatey/wiki/CreatePackages -->
    <id>terraform</id>
    <title>Terraform</title>
    <version>0.6.4</version>
    <authors>Mitchell Hashimoto, HashiCorp</authors>
    <owners>James Toyer</owners>
    <summary>Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.</summary>
    <description>
Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.

The key features of Terraform are:

*	**Infrastructure as Code**: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.
*	**Execution Plans**: Terraform has a "planning" step where it generates an *execution plan*. The execution plan shows what Terraform will do when you call apply. This lets you avoid any surprises when Terraform manipulates infrastructure.
*	**Resource Graph**: Terraform builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.
*	**Change Automation**: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order, avoiding many possible human errors.

For more information, see the [introduction section](http://www.terraform.io/intro) of the Terraform website.
    </description>
    <releaseNotes>
## 0.6.4 (October 15, 2015)

FEATURES:

  * **New provider: `rundeck`** [GH-2412]
  * **New provider: `packet`** [GH-2260], [GH-3472]
  * **New provider: `vsphere`**: Initial support for a VM resource [GH-3419]
  * **New resource: `cloudstack_loadbalancer_rule`** [GH-2934]
  * **New resource: `google_compute_project_metadata`** [GH-3065]
  * **New resources: `aws_ami`, `aws_ami_copy`, `aws_ami_from_instance`** [GH-2784]
  * **New resources: `aws_cloudwatch_log_group`** [GH-2415]
  * **New resource: `google_storage_bucket_object`** [GH-3192]
  * **New resources: `google_compute_vpn_gateway`, `google_compute_vpn_tunnel`** [GH-3213]
  * **New resources: `google_storage_bucket_acl`, `google_storage_object_acl`** [GH-3272]
  * **New resource: `aws_iam_saml_provider`** [GH-3156]
  * **New resources: `aws_efs_file_system` and `aws_efs_mount_target`** [GH-2196]
  * **New resources: `aws_opsworks_*`** [GH-2162]
  * **New resource: `aws_elasticsearch_domain`** [GH-3443]
  * **New resource: `aws_directory_service_directory`** [GH-3228]
  * **New resource: `aws_autoscaling_lifecycle_hook`** [GH-3351]
  * **New resource: `aws_placement_group`** [GH-3457]
  * **New resource: `aws_glacier_vault`** [GH-3491]
  * **New lifecycle flag: `ignore_changes`** [GH-2525]

IMPROVEMENTS:

  * core: Add a function to find the index of an element in a list. [GH-2704]
  * core: Print all outputs when `terraform output` is called with no arguments [GH-2920]
  * core: In plan output summary, count resource replacement as Add/Remove instead of Change [GH-3173]
  * core: Add interpolation functions for base64 encoding and decoding. [GH-3325]
  * core: Expose parallelism as a CLI option instead of a hard-coding the default of 10 [GH-3365]
  * core: Add interpolation function `compact`, to remove empty elements from a list. [GH-3239], [GH-3479]
  * core: Allow filtering of log output by level, using e.g. ``TF_LOG=INFO`` [GH-3380]
  * provider/aws: Add `instance_initiated_shutdown_behavior` to AWS Instance [GH-2887]
  * provider/aws: Support IAM role names (previously just ARNs) in `aws_ecs_service.iam_role` [GH-3061]
  * provider/aws: Add update method to RDS Subnet groups, can modify subnets without recreating  [GH-3053]
  * provider/aws: Paginate notifications returned for ASG Notifications [GH-3043]
  * provider/aws: Adds additional S3 Bucket Object inputs [GH-3265]
  * provider/aws: add `ses_smtp_password` to `aws_iam_access_key` [GH-3165]
  * provider/aws: read `iam_instance_profile` for `aws_instance` and save to state [GH-3167]
  * provider/aws: allow `instance` to be computed in `aws_eip` [GH-3036]
  * provider/aws: Add `versioning` option to `aws_s3_bucket` [GH-2942]
  * provider/aws: Add `configuation_endpoint` to `aws_elasticache_cluster` [GH-3250]
  * provider/aws: Add validation for `app_cookie_stickiness_policy.name` [GH-3277]
  * provider/aws: Add validation for `db_parameter_group.name` [GH-3279]
  * provider/aws: Set DynamoDB Table ARN after creation [GH-3500]
  * provider/aws: `aws_s3_bucket_object` allows interpolated content to be set with new `content` attribute. [GH-3200]
  * provider/aws: Allow tags for `aws_kinesis_stream` resource. [GH-3397]
  * provider/aws: Configurable capacity waiting duration for ASGs [GH-3191]
  * provider/aws: Allow non-persistent Spot Requests [GH-3311]
  * provider/aws: Support tags for AWS DB subnet group [GH-3138]
  * provider/cloudstack: Add `project` parameter to `cloudstack_vpc`, `cloudstack_network`, `cloudstack_ipaddress` and `cloudstack_disk` [GH-3035]
  * provider/openstack: add functionality to attach FloatingIP to Port [GH-1788]
  * provider/google: Can now do multi-region deployments without using multiple providers [GH-3258]
  * remote/s3: Allow canned ACLs to be set on state objects. [GH-3233]
  * remote/s3: Remote state is stored in S3 with `Content-Type: application/json` [GH-3385]

BUG FIXES:

  * core: Fix problems referencing list attributes in interpolations [GH-2157]
  * core: don't error on computed value during input walk [GH-2988]
  * core: Ignore missing variables during destroy phase [GH-3393]
  * provider/google: Crashes with interface conversion in GCE Instance Template [GH-3027]
  * provider/google: Convert int to int64 when building the GKE cluster.NodeConfig struct [GH-2978]
  * provider/google: google_compute_instance_template.network_interface.network should be a URL [GH-3226]
  * provider/aws: Retry creation of `aws_ecs_service` if IAM policy isn't ready yet [GH-3061]
  * provider/aws: Fix issue with mixed capitalization for RDS Instances  [GH-3053]
  * provider/aws: Fix issue with RDS to allow major version upgrades [GH-3053]
  * provider/aws: Fix shard_count in `aws_kinesis_stream` [GH-2986]
  * provider/aws: Fix issue with `key_name` and using VPCs with spot instance requests [GH-2954]
  * provider/aws: Fix unresolvable diffs coming from `aws_elasticache_cluster` names being downcased
      by AWS [GH-3120]
  * provider/aws: Read instance source_dest_check and save to state [GH-3152]
  * provider/aws: Allow `weight = 0` in Route53 records [GH-3196]
  * provider/aws: Normalize aws_elasticache_cluster id to lowercase, allowing convergence. [GH-3235]
  * provider/aws: Fix ValidateAccountId for IAM Instance Profiles [GH-3313]
  * provider/aws: Update Security Group Rules to Version 2 [GH-3019]
  * provider/aws: Migrate KeyPair to version 1, fixing issue with using `file()` [GH-3470]
  * provider/aws: Fix force_delete on autoscaling groups [GH-3485]
  * provider/aws: Fix crash with VPC Peering connections [GH-3490]
  * provider/aws: fix bug with reading GSIs from dynamodb [GH-3300]
  * provider/docker: Fix issue preventing private images from being referenced [GH-2619]
  * provider/digitalocean: Fix issue causing unnecessary diffs based on droplet slugsize case [GH-3284]
  * provider/openstack: add state 'downloading' to list of expected states in
      `blockstorage_volume_v1` creation [GH-2866]
  * provider/openstack: remove security groups (by name) before adding security
      groups (by id) [GH-2008]

INTERNAL IMPROVEMENTS:

  * core: Makefile target "plugin-dev" for building just one plugin. [GH-3229]
  * helper/schema: Don't allow ``Update`` func if no attributes can actually be updated, per schema. [GH-3288]
  * helper/schema: Default hashing function for sets [GH-3018]
  * helper/multierror: Remove in favor of [github.com/hashicorp/go-multierror](http://github.com/hashicorp/go-multierror). [GH-3336]

## Previous Releases
For more information on previous releases, check out the changelog on [GitHub](https://github.com/hashicorp/terraform/blob/v0.6.4/CHANGELOG.md).
    </releaseNotes>
    <projectUrl>http://www.terraform.io</projectUrl>
    <tags>terraform</tags>
    <copyright>HashiCorp 2015</copyright>
    <licenseUrl>https://github.com/hashicorp/terraform/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <!-- Important note about https://cdn.rawgit.com: Files are cached permanently after the first request. Use commit URLs when updating the icon. -->
    <iconUrl>https://cdn.rawgit.com/jamestoyer/chocolatey-packages/c98f82fc306d8e204546d890aad96b49f23b7539/terraform/icons/terraform.png</iconUrl>
    <!--<dependencies>
      <dependency id="" version="" />
    </dependencies>-->
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
