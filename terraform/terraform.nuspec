<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if ??? doesn?t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <!-- Read this before publishing packages to chocolatey.org: https://github.com/chocolatey/chocolatey/wiki/CreatePackages -->
    <id>terraform</id>
    <title>Terraform</title>
    <version>0.6.0</version>
    <authors>Mitchell Hashimoto, HashiCorp</authors>
    <owners>James Toyer</owners>
    <summary>Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.</summary>
    <description>
Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.

The key features of Terraform are:

*	**Infrastructure as Code**: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.
*	**Execution Plans**: Terraform has a "planning" step where it generates an *execution plan*. The execution plan shows what Terraform will do when you call apply. This lets you avoid any surprises when Terraform manipulates infrastructure.
*	**Resource Graph**: Terraform builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.
*	**Change Automation**: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order, avoiding many possible human errors.

For more information, see the [introduction section](http://www.terraform.io/intro) of the Terraform website.
    </description>
    <releaseNotes>
## 0.6.0 (June 30, 2015)

BACKWARDS INCOMPATIBILITIES:

 * command/push: If a variable is already set within Atlas, it won't be
     updated unless the `-overwrite` flag is present [GH-2373]
 * connection/ssh: The `agent` field now defaults to `true` if
     the `SSH_AGENT_SOCK` environment variable is present. In other words,
     `ssh-agent` support is now opt-out instead of opt-in functionality. [GH-2408]
 * provider/aws: If you were setting access and secret key to blank ("")
     to force Terraform to load credentials from another source such as the
     EC2 role, this will now error. Remove the blank lines and Terraform
     will load from other sources.
 * `concat()` has been repurposed to combine lists instead of strings (old behavior
     of joining strings is maintained in this version but is deprecated, strings
     should be combined using interpolation syntax, like "${var.foo}{var.bar}")
     [GH-1790]

FEATURES:

  * **New provider: `azure`** [GH-2052, GH-2053, GH-2372, GH-2380, GH-2394, GH-2515, GH-2530, GH-2562]
  * **New resource: `aws_autoscaling_notification`** [GH-2197]
  * **New resource: `aws_autoscaling_policy`** [GH-2201]
  * **New resource: `aws_cloudwatch_metric_alarm`** [GH-2201]
  * **New resource: `aws_dynamodb_table`** [GH-2121]
  * **New resource: `aws_ecs_cluster`** [GH-1803]
  * **New resource: `aws_ecs_service`** [GH-1803]
  * **New resource: `aws_ecs_task_definition`** [GH-1803, GH-2402]
  * **New resource: `aws_elasticache_parameter_group`** [GH-2276]
  * **New resource: `aws_flow_log`** [GH-2384]
  * **New resource: `aws_iam_group_association`** [GH-2273]
  * **New resource: `aws_iam_policy_attachment`** [GH-2395]
  * **New resource: `aws_lambda_function`** [GH-2170]
  * **New resource: `aws_route53_delegation_set`** [GH-1999]
  * **New resource: `aws_route53_health_check`** [GH-2226]
  * **New resource: `aws_spot_instance_request`** [GH-2263]
  * **New resource: `cloudstack_ssh_keypair`** [GH-2004]
  * **New remote state backend: `swift`**: You can now store remote state in
     a OpenStack Swift. [GH-2254]
  * command/output: support display of module outputs [GH-2102]
  * core: `keys()` and `values()` funcs for map variables [GH-2198]
  * connection/ssh: SSH bastion host support and ssh-agent forwarding [GH-2425]

IMPROVEMENTS:

  * core: HTTP remote state now accepts `skip_cert_verification`
      option to ignore TLS cert verification. [GH-2214]
  * core: S3 remote state now accepts the 'encrypt' option for SSE [GH-2405]
  * core: `plan` now reports sum of resources to be changed/created/destroyed [GH-2458]
  * core: Change string list representation so we can distinguish empty, single
      element lists [GH-2504]
  * core: Properly close provider and provisioner plugin connections [GH-2406, GH-2527]
  * provider/aws: AutoScaling groups now support updating Load Balancers without
      recreation [GH-2472]
  * provider/aws: Allow more in-place updates for ElastiCache cluster without recreating
      [GH-2469]
  * provider/aws: ElastiCache Subnet Groups can be updated
      without destroying first [GH-2191]
  * provider/aws: Normalize `certificate_chain` in `aws_iam_server_certificate` to
      prevent unnecessary replacement. [GH-2411]
  * provider/aws: `aws_instance` supports `monitoring' [GH-2489]
  * provider/aws: `aws_launch_configuration` now supports `enable_monitoring` [GH-2410]
  * provider/aws: Show outputs after `terraform refresh` [GH-2347]
  * provider/aws: Add backoff/throttling during DynamoDB creation [GH-2462]
  * provider/aws: Add validation for aws_vpc.cidr_block [GH-2514]
  * provider/aws: Add validation for aws_db_subnet_group.name [GH-2513]
  * provider/aws: Add validation for aws_db_instance.identifier [GH-2516]
  * provider/aws: Add validation for aws_elb.name [GH-2517]
  * provider/aws: Add validation for aws_security_group (name+description) [GH-2518]
  * provider/aws: Add validation for aws_launch_configuration [GH-2519]
  * provider/aws: Add validation for aws_autoscaling_group.name [GH-2520]
  * provider/aws: Add validation for aws_iam_role.name [GH-2521]
  * provider/aws: Add validation for aws_iam_role_policy.name [GH-2552]
  * provider/aws: Add validation for aws_iam_instance_profile.name [GH-2553]
  * provider/aws: aws_auto_scaling_group.default_cooldown no longer requires
      resource replacement [GH-2510]
  * provider/aws: add AH and ESP protocol integers [GH-2321]
  * provider/docker: `docker_container` has the `privileged`
      option. [GH-2227]
  * provider/openstack: allow `OS_AUTH_TOKEN` environment variable
      to set the openstack `api_key` field [GH-2234]
  * provider/openstack: Can now configure endpoint type (public, admin,
      internal) [GH-2262]
  * provider/cloudstack: `cloudstack_instance` now supports projects [GH-2115]
  * provisioner/chef: Added a `os_type` to specifically specify the target OS [GH-2483]
  * provisioner/chef: Added a `ohai_hints` option to upload hint files [GH-2487]

BUG FIXES:

  * core: lifecycle `prevent_destroy` can be any value that can be
      coerced into a bool [GH-2268]
  * core: matching provider types in sibling modules won't override
      each other's config. [GH-2464]
  * core: computed provider configurations now properly validate [GH-2457]
  * core: orphan (commented out) resource dependencies are destroyed in
      the correct order [GH-2453]
  * core: validate object types in plugins are actually objects [GH-2450]
  * core: fix `-no-color` flag in subcommands [GH-2414]
  * core: Fix error of 'attribute not found for variable' when a computed
      resource attribute is used as a parameter to a module [GH-2477]
  * core: moduled orphans will properly inherit provider configs [GH-2476]
  * core: modules with provider aliases work properly if the parent
      doesn't implement those aliases [GH-2475]
  * core: unknown resource attributes passed in as parameters to modules
      now error [GH-2478]
  * core: better error messages for missing variables [GH-2479]
  * core: removed set items now properly appear in diffs and applies [GH-2507]
  * core: '*' will not be added as part of the variable name when you
      attempt multiplication without a space [GH-2505]
  * core: fix target dependency calculation across module boundaries [GH-2555]
  * command/*: fixed bug where variable input was not asked for unset
      vars if terraform.tfvars existed [GH-2502]
  * command/apply: prevent output duplication when reporting errors [GH-2267]
  * command/apply: destroyed orphan resources are properly counted [GH-2506]
  * provider/aws: loading credentials from the environment (vars, EC2 role,
      etc.) is more robust and will not ask for credentials from stdin [GH-1841]
  * provider/aws: fix panic when route has no `cidr_block` [GH-2215]
  * provider/aws: fix issue preventing destruction of IAM Roles [GH-2177]
  * provider/aws: fix issue where Security Group Rules could collide and fail
      to save to the state file correctly [GH-2376]
  * provider/aws: fix issue preventing destruction self referencing Securtity
     Group Rules [GH-2305]
  * provider/aws: fix issue causing perpetual diff on ELB listeners
      when non-lowercase protocol strings were used [GH-2246]
  * provider/aws: corrected frankfurt S3 website region [GH-2259]
  * provider/aws: `aws_elasticache_cluster` port is required [GH-2160]
  * provider/aws: Handle AMIs where RootBlockDevice does not appear in the
      BlockDeviceMapping, preventing root_block_device from working [GH-2271]
  * provider/aws: fix `terraform show` with remote state [GH-2371]
  * provider/aws: detect `instance_type` drift on `aws_instance` [GH-2374]
  * provider/aws: fix crash when `security_group_rule` referenced non-existent
      security group [GH-2434]
  * provider/aws: `aws_launch_configuration` retries if IAM instance
      profile is not ready yet. [GH-2452]
  * provider/aws: `fqdn` is populated during creation for `aws_route53_record` [GH-2528]
  * provider/aws: retry VPC delete on DependencyViolation due to eventual
      consistency [GH-2532]
  * provider/aws: VPC peering connections in "failed" state are deleted [GH-2544]
  * provider/aws: EIP deletion works if it was manually disassociated [GH-2543]
  * provider/aws: `elasticache_subnet_group.subnet_ids` is now a required argument [GH-2534]
  * provider/aws: handle nil response from VPN connection describes [GH-2533]
  * provider/cloudflare: manual record deletion doesn't cause error [GH-2545]
  * provider/digitalocean: handle case where droplet is deleted outside of
      terraform [GH-2497]
  * provider/dme: No longer an error if record deleted manually [GH-2546]
  * provider/docker: Fix issues when using containers with links [GH-2327]
  * provider/openstack: fix panic case if API returns nil network [GH-2448]
  * provider/template: fix issue causing "unknown variable" rendering errors
      when an existing set of template variables is changed [GH-2386]
  * provisioner/chef: improve the decoding logic to prevent parameter not found errors [GH-2206]

## Previous Releases
For more information on previous releases, check out the changelog on [GitHub](https://github.com/hashicorp/terraform/blob/v0.6.0/CHANGELOG.md).
    </releaseNotes>
    <projectUrl>http://www.terraform.io</projectUrl>
    <tags>terraform</tags>
    <copyright>HashiCorp 2015</copyright>
    <licenseUrl>https://github.com/hashicorp/terraform/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <!-- Important note about https://cdn.rawgit.com: Files are cached permanently after the first request. Use commit URLs when updating the icon. -->
    <iconUrl>https://cdn.rawgit.com/jamestoyer/chocolatey-packages/c98f82fc306d8e204546d890aad96b49f23b7539/terraform/icons/terraform.png</iconUrl>
    <!--<dependencies>
      <dependency id="" version="" />
    </dependencies>-->
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
