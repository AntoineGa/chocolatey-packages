<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if ??? doesn?t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <!-- Read this before publishing packages to chocolatey.org: https://github.com/chocolatey/chocolatey/wiki/CreatePackages -->
    <id>terraform</id>
    <title>Terraform</title>
    <version>0.6.1</version>
    <authors>Mitchell Hashimoto, HashiCorp</authors>
    <owners>James Toyer</owners>
    <summary>Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.</summary>
    <description>
Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.

The key features of Terraform are:

*	**Infrastructure as Code**: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.
*	**Execution Plans**: Terraform has a "planning" step where it generates an *execution plan*. The execution plan shows what Terraform will do when you call apply. This lets you avoid any surprises when Terraform manipulates infrastructure.
*	**Resource Graph**: Terraform builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.
*	**Change Automation**: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order, avoiding many possible human errors.

For more information, see the [introduction section](http://www.terraform.io/intro) of the Terraform website.
    </description>
    <releaseNotes>
## 0.6.1 (July 20, 2015)

FEATURES:

  * **New resource: `google_container_cluster`** [GH-2357]
  * **New resource: `aws_vpc_endpoint`** [GH-2695]

IMPROVEMENTS:

  * connection/ssh: Print SSH bastion host details to output [GH-2684]
  * provider/aws: Create RDS databases from snapshots [GH-2062]
  * provider/aws: Add support for restoring from Redis backup stored in S3 [GH-2634]
  * provider/aws: Add `maintenance_window` to ElastiCache cluster [GH-2642]
  * provider/aws: Availability Zones are optional when specifying VPC Zone Identifiers in
      Auto Scaling Groups updates [GH-2724]
  * provider/google: Add metadata_startup_script to google_compute_instance [GH-2375]

BUG FIXES:

  * core: don't prompt for variables with defaults [GH-2613]
  * core: Return correct number of planned updates [GH-2620]
  * core: Fix "provider not found" error that can occur while running
      a destroy plan with grandchildren modules [GH-2755]
  * core: Fix UUID showing up in diff for computed splat (`foo.*.bar`)
      variables. [GH-2788]
  * core: Orphan modules that contain no resources (only other modules)
      are properly destroyed up to arbitrary depth [GH-2786]
  * core: Fix "attribute not available" during destroy plans in
      cases where the parameter is passed between modules [GH-2775]
  * connection/ssh: fix issue on machines with an SSH Agent available
    preventing `key_file` from being read without explicitly
    setting `agent = false` [GH-2615]
  * provider/aws: Allow uppercase characters in `aws_elb.name` [GH-2580]
  * provider/aws: Allow underscores in `aws_db_subnet_group.name` (undocumented by AWS) [GH-2604]
  * provider/aws: Allow dots in `aws_db_subnet_group.name` (undocumented by AWS) [GH-2665]
  * provider/aws: Fix issue with pending Spot Instance requests [GH-2640]
  * provider/aws: Fix issue in AWS Classic environment with referencing external
      Security Groups [GH-2644]
  * provider/aws: Bump internet gateway detach timeout [GH-2669]
  * provider/aws: Fix issue with detecting differences in DB Parameters [GH-2728]
  * provider/aws: `ecs_cluster` rename (recreation) and deletion is handled correctly [GH-2698]
  * provider/aws: `aws_route_table` ignores routes generated for VPC endpoints [GH-2695]
  * provider/aws: Fix issue with Launch Configurations and enable_monitoring [GH-2735]
  * provider/openstack: allow empty api_key and endpoint_type [GH-2626]
  * provisioner/chef: Fix permission denied error with ohai hints [GH-2781]


## Previous Releases
For more information on previous releases, check out the changelog on [GitHub](https://github.com/hashicorp/terraform/blob/v0.6.1/CHANGELOG.md).
    </releaseNotes>
    <projectUrl>http://www.terraform.io</projectUrl>
    <tags>terraform</tags>
    <copyright>HashiCorp 2015</copyright>
    <licenseUrl>https://github.com/hashicorp/terraform/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <!-- Important note about https://cdn.rawgit.com: Files are cached permanently after the first request. Use commit URLs when updating the icon. -->
    <iconUrl>https://cdn.rawgit.com/jamestoyer/chocolatey-packages/c98f82fc306d8e204546d890aad96b49f23b7539/terraform/icons/terraform.png</iconUrl>
    <!--<dependencies>
      <dependency id="" version="" />
    </dependencies>-->
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
